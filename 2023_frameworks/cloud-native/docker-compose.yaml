version: "3"

services:
 node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    networks: ["net"]
    expose: [9100]
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    command:
    - '--path.procfs=/host/proc'
    - '--path.rootfs=/rootfs'
    - '--path.sysfs=/host/sys'
    - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  prometheus:
    image: prom/prometheus:main
    restart: always
    container_name: prometheus
    user: 1000:1000
    networks: ["net", "app-api_dev"]
    ports: [9090:9090]
    volumes:
    - ./configs:/prometheus/configs
    - ./data/prometheus:/prometheus/data
    # - prometheus_data:/prometheus/data
    command:
    # - '--config.file=/etc/prometheus/prometheus.yaml'
    - '--config.file=/prometheus/configs/prometheus.yaml'
    - '--web.config.file=/prometheus/configs/prometheus-web.yaml'
    - '--web.console.libraries=/usr/share/prometheus/console_libraries'
    - '--web.console.templates=/usr/share/prometheus/consoles'
    - '--storage.tsdb.path=/prometheus/data'
    - '--storage.tsdb.retention.time=15d'

  grafana:
    image: grafana/grafana:main
    container_name: grafana
    user: 1000:1000
    networks: ["net","app-api_dev"]
    ports: ["3000:3000"]
    volumes:
    - ./data/grafana:/var/lib/grafana
    - ./configs:/app/configs
    environment:
    # - GF_SERVER_CERT_FILE=/var/lib/grafana/ssl/grafana.crt
    # - GF_SERVER_CERT_KEY=/var/lib/grafana/ssl/grafana.key
    - GF_SERVER_PROTOCOL=https
    - GF_SERVER_CERT_FILE=/app/configs/server.pem
    - GF_SERVER_CERT_KEY=/app/configs/server.key

#volumes:
#  prometheus_data:

networks:
  net:
    name: cloud-native
    driver: bridge
    external: false
  app-api_dev:
    name: app-api_dev
    driver: bridge
    external: true
