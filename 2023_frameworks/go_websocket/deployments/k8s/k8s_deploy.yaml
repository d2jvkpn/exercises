spec: &spec
  volumes:
  - name: hello-data
    hostPath: { path: "/data/hello02_logs", type: "DirectoryOrCreate" }
  # - name: logFile
    # hostPath: { path: "/var/local/aaa/log.txt", type: "FileOrCreate" }
  - name: nfs-vol
    persistentVolumeClaim: {claimName: "pvc-nfs"}

  containers:
  - name: hello02
    image: registry.cn-shanghai.aliyuncs.com/d2jvkpn/hello:dev
    # IfNotPresent, Always, Never
    imagePullPolicy: "Always"

    resources:
      # 500MHz, 128Mi(power-of-two)
      requests: { cpu: "200m", memory: "128Mi" }
      limits: { cpu: "500m", memory: "256Mi" }

    env:
    - name: POD_NAME
      valueFrom:
        fieldRef: { apiVersion: "v1", fieldPath: "metadata.name" }

    volumeMounts:
    # readOnly: true
    - { name: "hello-data", subPathExpr: "$(POD_NAME)", mountPath: "/opt/hello/logs"}
    - { name: "nfs-vol", subPath: "hello02/static", mountPath: "/opt/hello/static"}

    livenessProbe:
      # HTTP Status >= 200 and < 400
      httpGet: { path: "/debug/healthy", port: 1030 }
      initialDelaySeconds: 5
      timeoutSeconds: 1
      periodSeconds: 10
      failureThreshold: 3

    ports:
    - { name: "http", containerPort: 8080, protocol: "TCP" }
    - { name: "pprof", containerPort: 1030, protocol: "TCP" }

    # command: ["./main", "-addr", ":8080"]
    # args: ["$(MESSAGE)"]

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello02
  namespace: default
  labels: {run: "hello02"}

spec:
  replicas: 3
  selector:
    matchLabels: { app: "hello02" }
  template:
    metadata:
      labels: { app: "hello02" }

    spec:
      <<: *spec
